package com.springbackend.springboot.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.springbackend.springboot.exception.ResourceNotFoundException;
import com.springbackend.springboot.model.Doctor;
import com.springbackend.springboot.repository.DoctorRepository;
@CrossOrigin(origins="http://localhost:4200")
@RestController
@RequestMapping("/api/v1/")
public class DoctorController {
	
	@Autowired
	private DoctorRepository doctorRepository;
	
	
	//get all employees
	@GetMapping("/doctors")
	public List<Doctor> getAllEmployees(){
		return doctorRepository.findAll();
	}
	
	//create rest api
	@PostMapping("/doctors")
	public Doctor createEmployee(@RequestBody Doctor doctor) {
		return doctorRepository.save(doctor);
	}
	
	//get employee by id rest api
	@GetMapping("/doctors/{id}")
	public ResponseEntity<Doctor> getEmployeeById(@PathVariable Long id) {
		Doctor doctor = doctorRepository.findById(id).orElseThrow(()->
		new ResourceNotFoundException("Doctor not exist with id : " + id));
		return ResponseEntity.ok(doctor);
	}

}







